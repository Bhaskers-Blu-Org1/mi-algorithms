# Copyright (C) tkornuta, IBM Corporation 2015-2019
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: cpp

# This will run on Travis' 'new' container-based infrastructure
# https://docs.travis-ci.com/user/migrating-from-legacy/#How-can-I-use-container-based-infrastructure%3F
# 
# Additionally, first job will build documentation using doxygen and deploy it to gh pages. 
# https://gist.github.com/vidavidorra/548ffbcdae99d752da02

# This will run on Travis' 'new' container-based infrastructure
sudo: false

# Use cache for boost and eigen.
cache:
#  directories:
#    - /usr/include/eigen3
#    - /usr/include/boost

# Safelist: focus Travis' attention on the master branch.
branches:
  only:
    - master

# Define matrix of build environments.
jobs:
  include:
    # 0. cache
    #- stage: prepare cache
    #  os: linux
    #  dist: trusty
    #  addons:
    #    apt:
    #      sources:
    #        - 'ubuntu-toolchain-r-test'
    #      packages:
    #        - 'libboost-all-dev'
    #        - 'libeigen3-dev'
    #  env:
    #    - OS=Ubuntu-14.04
    #  # Return true.
    #  script: true

    # 1. Ubuntu 14.04 g++-4.8
    - stage: "Compilation"
      os: linux
      dist: trusty
      compiler: gcc
      addons:
        apt:
          sources:
            - 'ubuntu-toolchain-r-test'
          packages:
            - 'libboost-all-dev'
            - 'libeigen3-dev'
            - 'g++-4.8'
      env:
        - OS=Ubuntu-14.04
        - COMPILER=g++-4.8
      before_script:
        - ./scripts/download_build_deps.sh
      script:
        - ./scripts/build.sh
      after_script:
        - ./scripts/unit_tests.sh

    # 2. Ubuntu 14.04 g++5
    #- os: linux
    #  dist: trusty
    #  compiler: gcc
    #  addons:
    #    apt:
    #      sources:
    #        - ubuntu-toolchain-r-test
    #      packages:
    #        - libboost-all-dev
    #        - 'libeigen3-dev'
    #        - g++-5
    #  env:
    #    - OS=Ubuntu-14.04
    #    - COMPILER=g++-5
    #    - CC=gcc-5
    #    - CXX=g++-5
    #  before_script:
    #    - ./scripts/download_build_deps.sh
    #  script:
    #    - ./scripts/build.sh

    # 3. Ubuntu 14.04 clang++
    - os: linux
      dist: trusty
      compiler: clang
      env:
        - OS=Ubuntu-14.04
        - COMPILER=clang++
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5']
          packages:
            - libboost-all-dev
            - 'libeigen3-dev'
      before_script:
        - ./scripts/download_build_deps.sh
      script:
        - ./scripts/build.sh

    # 4. OSX clang
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      env:
        - OS=MacOS 10.13
        - COMPILER=clang++
      addons:
        homebrew:
          packages:   
            - boost 
            - eigen 
      before_script:
        - ./scripts/download_build_deps.sh
      script:
        - ./scripts/build.sh

    # 5. Unit tests
    #- stage: "Tests"               
    #  name: "Unit Tests"
    #  os: linux
    #  dist: trusty
    #  compiler: gcc
    #  addons:
    #    apt:
    #      sources:
    #        - 'ubuntu-toolchain-r-test'
    #      packages:
    #        - 'libboost-all-dev'
    #        - 'libeigen3-dev'
    #        - 'g++-4.8'
    #  env:
    #    - OS=Ubuntu-14.04
    #    - COMPILER=g++-4.8
    #  before_script:
    #    - ./scripts/download_build_deps.sh
    #  script:
    #    - ./scripts/build.sh
    #  after_script:
    #    - ./scripts/unit_tests.sh

    # 6. Deploy
    - stage: "Deploy"
      name: "GitHub Pages"
      addons:
        apt:
          packages:
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
      script: 
        - doxygen mi-algorithms.doxyfile

      # Deploy using travis builtin GitHub Pages support
      deploy:
        provider: pages
        skip_cleanup: true
        local_dir: $TRAVIS_BUILD_DIR/html
        github_token: $GITHUB_TOKEN
